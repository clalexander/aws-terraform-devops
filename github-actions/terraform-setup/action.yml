name: Terraform Setup
description: Sets up Terraform for use in actions.


inputs:
  terraform-version: 
    description: The version of Terraform to use.
    required: false
    default: ">= 1.5"
  working-directory:
    description: The working directory where the Terraform configuration is located.
    required: false
    default: ./terraform
  aws-account:
    description: The AWS account to which deploy the resources.
    required: true
  aws-region:
    description: The AWS region to which deploy the resources.
    required: true
  aws-access-key-id:
    description: The AWS access key id to use.
    required: true
  aws-secret-access-key:
    description: The AWS secret access key to use.
    required: true
  remote-state-access-key:
    description: The AWS access key id to use to access the remote state.
    required: true
  remote-state-secret-key:
    description: The AWS secret access key to use to access the remote state.
    required: true
  remote-state-region:
    description: The AWS region where the remote state is located.
    required: true
  remote-state-bucket:
    description: The name of the S3 bucket to use to store the remote state.
    required: true
  remote-state-lock-table:
    description: The name of the DynamoDB table to use to lock the remote state.
    required: true
  tfkey-environment:
    description: The environment to use to generate the terraform key.
    required: true
  tfkey-application:
    description: The application name to use to generate the terraform key.
    required: false
  tfkey-baseline:
    description: The baseline name to use to generate the terraform key.
    required: false
  terraform-options:
    description: The options to pass to the terraform command.
    required: false
    default: ""


runs:
  using: composite
  steps:
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform-version }}

    - name: Add Environment Variables
      shell: bash
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ inputs.aws-access-key-id }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ inputs.aws-secret-access-key }}" >> $GITHUB_ENV
        echo "AWS_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV
        echo "AWS_ACCOUNT=${{ inputs.aws-account }}" >> $GITHUB_ENV
        echo "REMOTE_STATE_ACCESS_KEY=${{ inputs.remote-state-access-key }}" >> $GITHUB_ENV
        echo "REMOTE_STATE_SECRET_KEY=${{ inputs.remote-state-secret-key }}" >> $GITHUB_ENV
        echo "REMOTE_STATE_REGION=${{ inputs.remote-state-region }}" >> $GITHUB_ENV
        echo "REMOTE_STATE_BUCKET=${{ inputs.remote-state-bucket }}" >> $GITHUB_ENV
        echo "REMOTE_STATE_LOCK_TABLE=${{ inputs.remote-state-lock-table }}" >> $GITHUB_ENV
        echo "TFKEY_ENVIRONMENT=${{ inputs.tfkey-environment }}" >> $GITHUB_ENV
        echo "TFKEY_APPLICATION=${{ inputs.tfkey-application }}" >> $GITHUB_ENV
        echo "TFKEY_BASELINE=${{ inputs.tfkey-baseline }}" >> $GITHUB_ENV

    - name: Bin Setup
      uses: ./../../_actions/devops/bin-setup

    - name: Terraform Init
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: tf init ${{ inputs.terraform-options }}
